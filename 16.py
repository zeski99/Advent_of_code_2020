print((lambda r:((lambda s, e:sum(sum([int(c) for c in n.split(",") if not int(c) in s]) for n in e))(set().union(*[{i for i in range(int(w.split("-")[0]),int(w.split("-")[1])+1)} for w in r[0].split() if "-" in w]), r[2].split()[2:]),(lambda v, t, d: (lambda f, *x: f(f,*x))(lambda g, v, d, t: g(g,[(lambda h: (lambda: d.update({h.index(True) : v.index(h)}) if sum(h) == 1 else False)() or [not k in d and h[k] for k in range(len(h))])(h) for h in v],d,t)if len(d) < len(t) else int(t[d[0]])*int(t[d[1]])*int(t[d[2]])*int(t[d[3]])*int(t[d[4]])*int(t[d[5]]), v, d, t))((lambda s: (lambda c: [[a.issubset(b) for b in s] for a in c])((lambda h: [{int(k[i]) for k in h} for i in range(len(h[0]))])([a.split(",") for a in r[2].split("\n")[1:] if all([int(x) in set().union(*s) for x in a.split(",")])])))([(lambda k, f: f(k[0][-3:], k[1][:3]).union(f(k[1][-3:], k[2])))(h.split("-"), lambda a,b: {c for c in range(int(a), int(b)+1)}) for h in r[0].split("\n")]),r[1].split()[2].split(","),dict())))(open("16").read().split("\n\n")))