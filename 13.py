print((lambda a: ((lambda h: h[0] * h[1])(min([(-int(a[0]) % int(n), int(n)) for n in a[1].split(",") if n != "x"],  key=lambda x: x[0])),(lambda d, p: sum([h[0] * ((lambda f,*x: f(f,*x))(lambda g, n, m, x0, x1,m0: x1 + m0 * (x1 < 0) if n <= 1 else g(g, m, n % m, x1 - (n // m) * x0, x0, m0), p//h[1], h[1], 0, 1, h[1])) * (p//h[1]) for h in d]) % p)(sorted([(-k, int(v)) for k,v in enumerate(a[1].split(",")) if v != "x"], key=lambda t: t[1], reverse=True), (lambda f,*x: f(f,*x))(lambda g,r,i: 1 if i == len(r) else int(r[i]) * g(g,r,i+1) if r[i] != "x" else g(g,r,i+1), a[1].split(","), 0))))(open("13").readlines()))