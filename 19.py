print((lambda a:(lambda d,p:(lambda u:(lambda t:(lambda x:(len([y for y in a[1].split() if y in x]),len([y for y in a[1].split() if (lambda x,y,d,c: True if y in x else False if len(y) % c != 0 else(lambda h, d: (lambda s,t:(not (False in s) and t[-1]) or (False in s and s.index(False) > len(s)/2 and t[::-1].index(False) + s.index(False) >= len(s)))([e in d["42"] for e in h], [e in d["31"] for e in h]))([y[i:i+c] for i in range(0, len(y), c)],d))(x,y,d,8)])))(set(t(t, "0",0))))(lambda g,n,e: d[n] if n in d and isinstance(d[n], list) else n if  n.isalpha() else g(g,n.split("|")[0],e) + g(g,n.split("|")[1],e) if "|" in n else (lambda s: p(g(g,s[0],e), g(g,s[1],e) if len(s)>1 else [""], g(g,s[2],e) if len(s)>2 else [""]))(n.split()) if " " in n else u(n,g(g,d[n],e))))(lambda k,v: d.update({k:v}) or v if k in d else v))({k:v for k,v in map(lambda s: (s.split(":")[0], s.split(":")[1]), a[0].split("\n"))},lambda a,b,c: [h+k+l for h in a for k in b for l in c]))(open("19").read().replace("\"","").split("\n\n")))